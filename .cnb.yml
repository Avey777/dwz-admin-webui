master:
  push:
    - services:
        # 流水线中启用 docker 服务
        - docker
      stages:
        - name: auto tag
          image: "cnbcool/git-auto-tag:latest"
          settings:
            tagFormat: '\${version}'
            branch: master
            repoUrlHttps: $CNB_REPO_URL_HTTPS
          exports:
            tag: NEW_TAG
        - name: show tag
          script: echo $NEW_TAG
develop:
  push:
    - docker:
        # 自定义镜像作为开发环境
        image: docker.cnb.cool/examples/workspace-images/workspace-node:22
      runner:
        tags: cnb:arch:amd64:containerd-snapshotter
      services:
        # 流水线中启用 docker 服务
        - docker
      stages:
        - name: antd build
          script: |
            npm i -g corepack
            pnpm install --frozen-lockfile
            pnpm pnpm build:antd --filter=\!./docs
            echo "666 Builder Success 🎉"
        - name: docker login
          script:
            - docker login -u ${CNB_TOKEN_USER_NAME} -p "${CNB_TOKEN}" ${CNB_DOCKER_REGISTRY}
        - name: docker build && push
          script: |
            docker buildx build --platform linux/amd64,linux/arm64 -t ${CNB_DOCKER_REGISTRY}/${CNB_REPO_SLUG_LOWERCASE}:${CNB_BRANCH} . --push
            docker buildx build --platform linux/loong64 -f Dockerfile.loong64 -t ${CNB_DOCKER_REGISTRY}/${CNB_REPO_SLUG_LOWERCASE}:${CNB_BRANCH}-loong64 . --push
$:
  tag_push:
    - services:
        # 流水线中启用 docker 服务
        - docker
      stages:
        # 云原生构建自动构建Docker镜像并将它发布到制品库
        - name: docker login
          script:
            - docker login -u ${CNB_TOKEN_USER_NAME} -p "${CNB_TOKEN}" ${CNB_DOCKER_REGISTRY}
        - name: docker build && push
          script: |
            docker buildx build --platform linux/amd64,linux/arm64 -t ${CNB_DOCKER_REGISTRY}/${CNB_REPO_SLUG_LOWERCASE}:${CNB_BRANCH} . --push
            docker buildx build --platform linux/loong64 -f Dockerfile.loong64 -t ${CNB_DOCKER_REGISTRY}/${CNB_REPO_SLUG_LOWERCASE}:${CNB_BRANCH}-loong64 . --push
        - name: docker build && push latest
          script: |
            docker buildx build --platform linux/amd64,linux/arm64 -t ${CNB_DOCKER_REGISTRY}/${CNB_REPO_SLUG_LOWERCASE}:latest . --push
            docker buildx build --platform linux/loong64 -f Dockerfile.loong64 -t ${CNB_DOCKER_REGISTRY}/${CNB_REPO_SLUG_LOWERCASE}:latest-loong64 . --push
